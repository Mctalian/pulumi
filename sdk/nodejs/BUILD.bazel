load("@aspect_rules_swc//swc:defs.bzl", "swc")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@bazel_skylib//lib:partial.bzl", "partial")

# Tests aren't working so they're not being type checked. They've also been
# taken out of the tsconfig.json. We should get this working somehow.
#
# Also, we should declare a top-level //:tsconfig using ts_config and use that
# here rather than the local tsconfig.json.
ts_project(
    name = "sdk",
    srcs = glob([
        "*.ts",
        "asset/*.ts",
        "automation/**/*.ts",
        "cmd/**/*.ts",
        "dynamic/**/*.ts",
        "iterable/**/*.ts",
        "log/**/*.ts",
        "provider/**/*.ts",
        "runtime/**/*.ts",
        "types/**/*.ts",
    ]),
    declaration = True,
    transpiler = partial.make(swc, swcrc = "//:.swcrc"),
    tsconfig = ":tsconfig.json",
    resolve_json_module = True,
    source_map = True,
    deps = [
        "//:node_modules/@grpc/grpc-js",
        "//:node_modules/@logdna/tail-file",
        "//:node_modules/@npmcli/arborist",
        "//:node_modules/@opentelemetry/api",
        "//:node_modules/@opentelemetry/exporter-zipkin",
        "//:node_modules/@opentelemetry/instrumentation",
        "//:node_modules/@opentelemetry/instrumentation-grpc",
        "//:node_modules/@opentelemetry/resources",
        "//:node_modules/@opentelemetry/sdk-trace-base",
        "//:node_modules/@opentelemetry/sdk-trace-node",
        "//:node_modules/@opentelemetry/semantic-conventions",
        "//:node_modules/@pulumi/query",
        "//:node_modules/@types/google-protobuf",
        "//:node_modules/@types/semver",
        "//:node_modules/@types/tmp",
        "//:node_modules/execa",
        "//:node_modules/fdir",
        "//:node_modules/google-protobuf",
        "//:node_modules/got",
        "//:node_modules/ini",
        "//:node_modules/js-yaml",
        "//:node_modules/minimist",
        "//:node_modules/normalize-package-data",
        "//:node_modules/picomatch",
        "//:node_modules/pkg-dir",
        "//:node_modules/require-from-string",
        "//:node_modules/semver",
        "//:node_modules/source-map-support",
        "//:node_modules/tmp",
        "//:node_modules/upath",

        # devDependencies
        "//:node_modules/@types/ini",
        "//:node_modules/@types/js-yaml",
        "//:node_modules/@types/minimist",
        #"//:node_modules/@types/mocha",
        "//:node_modules/@types/node",
        "//:node_modules/@types/normalize-package-data",
        "//:node_modules/@types/picomatch",
        #"//:node_modules/@types/sinon",
        #"//:node_modules/@types/split2",
        #"//:node_modules/@types/uuid",
        #"//:node_modules/@typescript-eslint/eslint-plugin",
        #"//:node_modules/@typescript-eslint/parser",
        #"//:node_modules/eslint",
        #"//:node_modules/eslint-plugin-header",
        #"//:node_modules/eslint-plugin-import",
        #"//:node_modules/mocha",
        #"//:node_modules/nyc",
        #"//:node_modules/rome",
        #"//:node_modules/sinon",
        "//:node_modules/ts-node",
        "//:node_modules/typescript",

        "//proto/pulumi:pulumirpc_ts_proto",
    ],
)
