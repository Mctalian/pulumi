# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'InvokeResult',
    'AwaitableInvokeResult',
    'invoke',
    'invoke_output',
]

@pulumi.output_type
class InvokeResult:
    def __init__(__self__, value=None):
        if value and not isinstance(value, str):
            raise TypeError("Expected argument 'value' to be a str")
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def value(self) -> Optional[str]:
        return pulumi.get(self, "value")


class AwaitableInvokeResult(InvokeResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return InvokeResult(
            value=self.value)


def invoke(value: Optional[str] = None,
           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableInvokeResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['value'] = value
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('parameterized:index:invoke', __args__, opts=opts, typ=InvokeResult).value

    return AwaitableInvokeResult(
        value=pulumi.get(__ret__, 'value'))


@_utilities.lift_output_func(invoke)
def invoke_output(value: Optional[pulumi.Input[Optional[str]]] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[InvokeResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
