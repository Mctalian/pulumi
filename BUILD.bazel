load("@bazel_gazelle//:def.bzl", "gazelle")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")

# gazelle:prefix github.com/pulumi/pulumi
#
# gazelle:go_naming_convention import_alias
#
# gazelle:proto package
# gazelle:proto_group go_package
# gazelle:go_grpc_compilers @io_bazel_rules_go//proto:go_proto,@io_bazel_rules_go//proto:go_grpc_v2
#
# gazelle:resolve go github.com/pulumi/pulumi/sdk/v3/proto/go //proto/pulumi:pulumirpc_go_proto
#
# gazelle:exclude sdk/proto/**/*
# gazelle:exclude sdk/go/auto/testdata/**/*
# gazelle:exclude sdk/go/auto/test/**/*
# gazelle:exclude sdk/python/lib/test/**/*
# gazelle:exclude sdk/go/pulumi-language-go/testdata/
# gazelle:exclude sdk/python/env/**/*
# gazelle:exclude sdk/nodejs/bin/**/*
# gazelle:exclude sdk/nodejs/tests/automation/data/**/*
# gazelle:exclude tests/integration/backend/diy/project/**/*
#
# gazelle:exclude pkg/codegen/testing/test/testdata/**/*
#
# gazelle:exclude tests/benchmarks/**/*
# gazelle:exclude tests/integration/get_resource/**/*
# gazelle:exclude tests/integration/construct_component_configure_provider/**/*
# gazelle:exclude tests/testdata/**/*
#
gazelle(name = "gazelle")

gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.work",
        "-to_macro=bazel/repo/go.bzl%go_deps",
        "-prune=True",
    ],
    command = "update-repos",
)

compile_pip_requirements(
    name = "python-requirements",
    requirements_in = "requirements.txt",
    requirements_txt = "requirements_lock.txt",
)
