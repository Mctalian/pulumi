// Copyright 2016-2023, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "pulumi/codegen/schema/schema.proto";

package codegen;

option go_package = "github.com/pulumi/pulumi/sdk/v3/proto/go/codegen";

// Loader is a service for getting schemas from the Pulumi engine for use in code generators and other tools.
// This is currently unstable and experimental.
service Loader {
    // GetSchema tries to find a schema for the given package and version.
    rpc GetSchema(GetSchemaRequest) returns (GetSchemaResponse) {}

    rpc GetPackageInfo(GetSchemaRequest) returns (pulumirpc.codegen.schema.PackageInfo) {}
    rpc GetResources(GetSchemaRequest) returns (pulumirpc.codegen.schema.List) {}
    rpc GetResource(GetSchemaPartRequest) returns (pulumirpc.codegen.schema.Resource) {}
}

// Parameterization specifies the name, version, and value for a parameterized package.
message Parameterization {
    string name = 1; // the parameterized package name.
    string version = 2; // the parameterized package version.
    bytes value = 3; // the parameter value for the parameterized package.
}

// GetSchemaRequest allows the engine to return a schema for a given package and version.
message GetSchemaRequest {
    // the package name for the schema being requested.
    string package = 1;
    // the version for the schema being requested, must be a valid semver or empty.
    string version = 2;
    // the optional download url for the schema being requested.
    string download_url = 3;
    // the parameterization for the schema being requested, can be empty.
    Parameterization parameterization = 4;
}

message GetSchemaPartRequest {
    GetSchemaRequest request = 1;
    string item = 2;
}

// GetSchemaResponse returns the schema data for the requested package.
message GetSchemaResponse {
    // the JSON encoded schema.
    bytes schema = 1;
}

// PartialLoader is a service a provider can implement to allow the engine to only load partial parts of the schema.
// This uses many of the same response message as the engine Loader service, but takes different requests.
service PartialLoader {
    rpc GetPackageInfo(GetPartialSchemaRequest) returns (pulumirpc.codegen.schema.PackageInfo) {}
    rpc GetResources(GetPartialSchemaRequest) returns (pulumirpc.codegen.schema.List) {}
    rpc GetResource(GetPartialSchemaPartRequest) returns (pulumirpc.codegen.schema.Resource) {}
}

message GetPartialSchemaRequest {
    string package = 1;
    string version = 2;
}

message GetPartialSchemaPartRequest {
    GetPartialSchemaRequest request = 1;
    string item = 2;
}