load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "lifecycletest",
    srcs = ["test_plan.go"],
    importpath = "github.com/pulumi/pulumi/pkg/v3/engine/lifecycletest",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/backend",
        "//pkg/backend/display",
        "//pkg/display",
        "//pkg/engine",
        "//pkg/resource/deploy",
        "//pkg/resource/deploy/deploytest",
        "//pkg/resource/deploy/providers",
        "//pkg/secrets/b64",
        "//pkg/util/cancel",
        "//sdk/go/common/apitype",
        "//sdk/go/common/diag/colors",
        "//sdk/go/common/promise",
        "//sdk/go/common/resource",
        "//sdk/go/common/resource/config",
        "//sdk/go/common/resource/plugin",
        "//sdk/go/common/slice",
        "//sdk/go/common/tokens",
        "//sdk/go/common/util/cmdutil",
        "//sdk/go/common/util/contract",
        "//sdk/go/common/util/result",
        "//sdk/go/common/workspace",
        "@com_github_blang_semver//:semver",
        "@com_github_mitchellh_copystructure//:copystructure",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)

alias(
    name = "go_default_library",
    actual = ":lifecycletest",
    visibility = ["//visibility:public"],
)

go_test(
    name = "lifecycletest_test",
    srcs = [
        "alias_test.go",
        "analyzer_test.go",
        "continue_on_error_test.go",
        "delete_before_replace_test.go",
        "golang_sdk_test.go",
        "import_test.go",
        "parameterized_test.go",
        "pending_delete_test.go",
        "provider_test.go",
        "pulumi_test.go",
        "refresh_test.go",
        "resource_reference_test.go",
        "source_query_test.go",
        "step_generator_test.go",
        "target_test.go",
        "transformation_test.go",
        "update_plan_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":lifecycletest"],
    deps = [
        "//pkg/display",
        "//pkg/engine",
        "//pkg/resource/deploy",
        "//pkg/resource/deploy/deploytest",
        "//pkg/resource/deploy/providers",
        "//proto/pulumi:pulumirpc_go_proto",
        "//sdk/go/common/apitype",
        "//sdk/go/common/diag",
        "//sdk/go/common/diag/colors",
        "//sdk/go/common/promise",
        "//sdk/go/common/resource",
        "//sdk/go/common/resource/config",
        "//sdk/go/common/resource/plugin",
        "//sdk/go/common/resource/urn",
        "//sdk/go/common/testing/diagtest",
        "//sdk/go/common/tokens",
        "//sdk/go/common/util/contract",
        "//sdk/go/common/util/rpcutil",
        "//sdk/go/common/util/rpcutil/rpcerror",
        "//sdk/go/common/workspace",
        "//sdk/go/pulumi",
        "@com_github_blang_semver//:semver",
        "@com_github_gofrs_uuid//:uuid",
        "@com_github_mxschmitt_golang_combinations//:golang-combinations",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_golang_x_exp//maps",
    ],
)
